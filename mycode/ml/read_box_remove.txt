#include "objdetect/objdetect.hpp"
#include "opencv2/highgui/highgui.hpp"
#include "opencv2/imgproc/imgproc.hpp"
#include "opencv2/ml/ml.hpp"
#include "opencv2/opencv.hpp"
#include "ImageFeatrueExtract.h"
#include <dlib\image_processing\frontal_face_detector.h>
#include <dlib\gui_widgets.h>
#include <dlib\image_io.h>
#include<dlib\opencv.h>
#include<iostream>

#include <atltime.h>
#include <windows.h>
#include <stdlib.h>
#include <io.h>
#include <direct.h>
#include <fstream>
#include <stdio.h>

using namespace dlib;
using namespace cv;
using namespace ml;
using namespace std;

#define INPUT_TXT_FILE                          "C:\\Users\\Administrator\\Desktop\\negBox\\box.txt"
#define StorageFile                             "C:\\Users\\Administrator\\Desktop\\negBox\\neg"
#define ADABOOST_MODEL_FILE						"./modelFile/boxModelFile2KX3K_22.xml"

int main(int argc, char** argv)
{
	const string storagefile = StorageFile;
	SYSTEMTIME st;
	int count = 0;
	int all = 0;
	char imageName[200];
	char timeName[30];
	string strFileName;
	char remove_file[200];
	CascadeClassifier object_cascade;
	object_cascade.load(ADABOOST_MODEL_FILE);
	int framecount = 0;
	ifstream inStr(INPUT_TXT_FILE);
	if (!inStr.is_open())
	{
		cout << "read videofile error" << endl;
		getchar();
		return -1;
	}
	while (std::getline(inStr, strFileName))
	{
		if (!strFileName.empty())
		{   
			cout << "处理个数" << all << endl;
			all++;
			Mat frame = imread(strFileName);
			Mat GrayfaceROI;
			if (frame.empty())
			{
				cout << "Process Current Video Complete!" << endl;
				break;
			}
			if (frame.channels() == 3)
				cvtColor(frame, GrayfaceROI, COLOR_BGR2GRAY);
			else
				GrayfaceROI = frame;

			std::vector<cv::Rect> vecObjects;
			object_cascade.detectMultiScale(GrayfaceROI, vecObjects, 1.1, 1, 0, Size(18, 30), Size(144, 240));
			if (!vecObjects.empty())
			{
				GetLocalTime(&st);
				int year = st.wYear;
				int month = st.wMonth;
				int day = st.wDay;
				int hour = st.wHour;
				int minute = st.wMinute;
				int second = st.wSecond;
				sprintf_s(timeName, "%04d%02d%02d%02d%02d%02d%s", year, month, day, hour, minute, second, "_");
				sprintf_s(imageName, "%s/%s%d%s", storagefile.c_str(), timeName, ++framecount, ".jpg");
				imwrite(imageName, frame);
				cout << "拥有手势个数：" << count++ << endl;
				strcpy(remove_file, strFileName.c_str());
				cout << "删除路径：" << remove_file << endl;
				std::remove(remove_file);
				int result = std::remove(remove_file);
				if (result == 0)
					cout << "delete failed!" << endl;
				else
					cout << "delete succeeded!" << endl;
				if (framecount > 999)
					framecount = 0;
			}
			else
			{
				continue;
			}
		}
	}
	return 0;
}

