#include <opencv2/opencv.hpp>
#include <opencv2/ml/ml.hpp>
#include <iostream>
#include <atltime.h>
#include <windows.h>
#include <stdlib.h>
#include <io.h>
#include <direct.h>
#include <fstream>
using namespace cv;
using namespace std;

void light(Mat  image)
{
	Mat gray;
	cvtColor(image, gray, CV_BGR2GRAY);
	double sum = 0;
	double avg = 0;
	CvScalar scalar;
	int Hist[256];
	for (int i = 0; i < 256; i++)
		Hist[i] = 0;
	for (int i = 0; i < gray.rows; i++)
	{
		for (int j = 0; j < gray.cols; j++)
		{
			sum += float(gray.at<uchar>(i, j) - 128);//在计算过程中，考虑128为亮度均值点
			int x = gray.at<uchar>(i, j);
			Hist[x]++;
		}
	}
	avg = sum / (gray.rows * gray.cols);
	double total = 0;
	double mean = 0;
	for (int i = 0; i < 256; i++)
	{
		total += abs(i - 128 - avg)* Hist[i];
	}
	mean = total / (gray.rows * gray.cols);
	double cast = abs(avg / mean);
	printf("sum: %f\n", sum);
	printf("avg: %f\n", avg);
	printf("total: %f\n", total);
	printf("mean: %f\n",mean);
	printf("avg / mean: %f\n", cast);
	if (cast > 0.68)
	{
		if (avg > 0)
			printf("light\n");
		else 
			printf("dark\n");
	}
	else
		printf("normal\n");
}
int main()
{
	VideoCapture capture(0);
	Mat frame;
	int count = 0;
	while (true)
	{
		count++;
		capture >> frame;
		light(frame);
		imshow("video", frame);
		int c = cv::waitKey(1);
		if (c == 27)
			return -1;
	}
	return 0;
}

