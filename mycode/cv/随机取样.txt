
#include "objdetect/objdetect.hpp"
#include "opencv2/highgui/highgui.hpp"
#include "opencv2/imgproc/imgproc.hpp"
#include "opencv2/opencv.hpp"
#include "ImageFeatrueExtract.h"
#include <dlib\image_processing\frontal_face_detector.h>
#include <dlib\gui_widgets.h>
#include <dlib\image_io.h>
#include<dlib\opencv.h>
#include<iostream>

#include <atltime.h>
#include <windows.h>
#include <stdlib.h>
#include <io.h>
#include <direct.h>
#include <fstream>

using namespace dlib;
using namespace cv;
using namespace ml;
using namespace std;

#define StorageFile     "C:\\Users\\Administrator\\Desktop\\faceneg"

int main(int argc, char** argv)
{
	VideoCapture cap(0);
	const string storagefile = StorageFile;
	SYSTEMTIME st;
	char imageName[200];
	char timeName[30];
	int framecount = 0;
	frontal_face_detector detector = get_frontal_face_detector();
	int x1, y1, x2, y2;
	srand(time(NULL));//随机种子的位置很重要
	while (1)
	{
		Mat frame;
		cap >> frame;
		if (frame.empty())
		{
			cout << "Process Current Video Complete!" << endl;
			break;
		}
		dlib::cv_image<rgb_pixel> img(frame);
		std::vector<dlib::rectangle> dets = detector(img);
		cout << "存在目标个数：" << dets.size() << endl;
		for (int i = 0; i < dets.size(); i++)
		{
			x1 = dets[i].left();
			y1 = dets[i].top();
			x2 = dets[i].right();
			y2 = dets[i].bottom();
			if (x1 < 0)
				x1 = 0;
			if (y1 < 0)
				y1 = 0;
			if (x2 > frame.cols)
				x2 = frame.cols;
			if (y2 > frame.rows)
				y2 = frame.rows;
			Rect rect(x1, y1, x2 - x1, y2 - y1);
			cv::rectangle(frame, rect, Scalar(255, 255, 255), 1, 1, 0);
		}
		if (frame.cols >= 80 && frame.rows >= 80)
		{
			for (int i = 0; i < 2; i++)
			{
				GetLocalTime(&st);
				int year = st.wYear;
				int month = st.wMonth;
				int day = st.wDay;
				int hour = st.wHour;
				int minute = st.wMinute;
				int second = st.wSecond;
				int x = (std::rand() % (frame.cols - 80)); //左上角x坐标
				int y = (std::rand() % (frame.rows - 80)); //左上角y坐标
				int w = (std::rand() % (60) + 20);
				int h = w;
				Mat imgROI = frame(Rect(x, y, w, h));
				sprintf_s(timeName, "%04d%02d%02d%02d%02d%02d%s", year, month, day, hour, minute, second, "_");
				sprintf_s(imageName, "%s/%s%d%s", storagefile.c_str(), timeName, ++framecount, ".jpg");
				imwrite(imageName, imgROI);//每一帧的随机保存
				cout << "随机存储个数：" << framecount << endl;
				if (framecount > 999)
					framecount = 0;
			}
		}
		imshow("photo", frame);
		waitKey(1);
	}
return 0;
}






//perfect
#include "objdetect/objdetect.hpp"
#include "opencv2/highgui/highgui.hpp"
#include "opencv2/imgproc/imgproc.hpp"
#include "opencv2/opencv.hpp"
#include "ImageFeatrueExtract.h"
#include <dlib\image_processing\frontal_face_detector.h>
#include <dlib\gui_widgets.h>
#include <dlib\image_io.h>
#include<dlib\opencv.h>
#include<iostream>

#include <atltime.h>
#include <windows.h>
#include <stdlib.h>
#include <io.h>
#include <direct.h>
#include <fstream>

using namespace dlib;
using namespace cv;
using namespace ml;
using namespace std;

#define INPUT_TXT_FILE        "D:\\Video11111111111111\\2.txt"
#define StorageFile     "D:\\Video11111111111111\\faceneg"

int main(int argc, char** argv)
{
	const string storagefile = StorageFile;
	SYSTEMTIME st;
	char imageName[200];
	char timeName[30];
	string strFileName;
	frontal_face_detector detector = get_frontal_face_detector();
	int x1, y1, x2, y2;
	int framecount = 0;
	srand(time(NULL));//设置随机数种子位置很重要
	ifstream inStr(INPUT_TXT_FILE);
	if (!inStr.is_open())
	{
		cout << "read videofile error" << endl;
		getchar();
		return -1;
	}
	while (std::getline(inStr, strFileName))
	{
		if (!strFileName.empty())
		{
			VideoCapture cap(strFileName);
			while (1)
			{
				Mat frame;
				cap >> frame;
				if (frame.empty())
				{
					cout << "Process Current Video Complete!" << endl;
					break;
				}
				dlib::cv_image<rgb_pixel> img(frame);
				std::vector<dlib::rectangle> dets = detector(img);
				cout << "存在目标个数：" << dets.size() << endl;
				for (int i = 0; i < dets.size(); i++)
				{
					x1 = dets[i].left();
					y1 = dets[i].top();
					x2 = dets[i].right();
					y2 = dets[i].bottom();
					if (x1 < 0)
						x1 = 0;
					if (y1 < 0)
						y1 = 0;
					if (x2 > frame.cols)
						x2 = frame.cols;
					if (y2 > frame.rows)
						y2 = frame.rows;
					Rect rect(x1, y1, x2 - x1, y2 - y1);
					cv::rectangle(frame, rect, Scalar(255, 255, 255), -1, 1, 0);
				}
				if (frame.cols >= 50 && frame.rows >= 50)
				{
					for (int i = 0; i < 1; i++)
					{
						GetLocalTime(&st);
						int year = st.wYear;
						int month = st.wMonth;
						int day = st.wDay;
						int hour = st.wHour;
						int minute = st.wMinute;
						int second = st.wSecond;
						int x = (std::rand() % (frame.cols - 80)); //左上角x坐标
						int y = (std::rand() % (frame.rows - 80)); //左上角y坐标
						int w = (std::rand() % (60) + 20);
						int h = w;
						Mat imgROI = frame(Rect(x, y, w, h));
						sprintf_s(timeName, "%04d%02d%02d%02d%02d%02d%s", year, month, day, hour, minute, second, "_");
						sprintf_s(imageName, "%s/%s%d%s", storagefile.c_str(), timeName, ++framecount, ".jpg");
						imwrite(imageName, imgROI);//每一帧的随机保存
						cout << "随机采样个数：" << framecount << endl;
						if (framecount > 999)
							framecount = 0;
					}
				}
				imshow("photo", frame);
				waitKey(1);
			}
		}
	}
	return 0;
}